name: deploy
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      GH_TOKEN:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      PACKAGE_PATH: /build/ExpForge.NpmPackage/package

    steps:
      - name: Download NPM package artifacts
        uses: actions/download-artifact@v4
        with:
          name: npm-package
          path: ./build/npm-package

      - name: Setup Node.js and authenticate NPM
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Check version difference
        id: version-check
        working-directory: ./build/npm-package
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current package.json version: $CURRENT_VERSION"

          PUBLISHED_VERSION=$(npm view expforge version || echo "0.0.0")
          echo "Latest published version: $PUBLISHED_VERSION"

          if [ "$CURRENT_VERSION" = "$PUBLISHED_VERSION" ]; then
            echo "Same version already published. Skipping publish."
            echo "publish=false" >> $GITHUB_ENV
          else
            echo "New version detected. Proceeding with publish."
            echo "publish=true" >> $GITHUB_ENV
          fi

      - name: Build package
        if: env.publish == 'true'
        working-directory: ${{ env.PACKAGE_PATH }}
        run: npm run build --if-present

      - name: Publish to npm
        if: env.publish == 'true'
        working-directory: ${{ env.PACKAGE_PATH }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Rename package.json to GitHub Packages
        if: env.publish == 'true'
        working-directory: ${{ env.PACKAGE_PATH }}
        run: |
          jq '.name = "@celinhodaltro/expforge"' package.json > package.tmp.json
          mv package.tmp.json package.json

      - name: Configure npm for GitHub Packages
        if: env.publish == 'true'
        working-directory: ${{ env.PACKAGE_PATH }}
        run: |
          echo "@celinhodaltro:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> .npmrc
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Publish to GitHub Packages
        if: env.publish == 'true'
        working-directory: ${{ env.PACKAGE_PATH }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create GitHub Release
        if: env.publish == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ inputs.version }}
          release_name: Release v${{ inputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
